#include <iostream>
using namespace std;

#define INF 9999

int main() {
    int n, cost[10][10], selected[10] = {0}, edges = 0;

    cout << "Enter number of vertices: ";
    cin >> n;

    cout << "Enter adjacency matrix (0 for no edge):\n";
    for (int i = 0; i < n; i++)
    for (int j = 0; j < n; j++) {
        cin >> cost[i][j];
        if (cost[i][j] == 0 && i != j)
            cost[i][j] = INF;
    }

    selected[0] = 1;
    int totalCost = 0;

    cout << "\nEdges in the Minimum Spanning Tree:\n";

    while (edges < n - 1) {
        int min = INF, u = -1, v = -1;

        for (int i = 0; i < n; i++) {
            if (selected[i]) {
                for (int j = 0; j < n; j++) {
                    if (!selected[j] && cost[i][j] < min) {
                        min = cost[i][j];
                        u = i;
                        v = j;
                    }
                }
            }
        }

        if (u != -1 && v != -1) {
            cout << u << " - " << v << " : " << cost[u][v] << "\n";
            totalCost += cost[u][v];
            selected[v] = 1;
            edges++;
        }
    }

    cout << "Total Cost of MST: " << totalCost << "\n";
    return 0;
}
